import org.w3c.dom.*;
import org.xml.sax.InputSource;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Properties;
import org.apache.kafka.clients.producer.*;
import org.json.JSONObject;

public class XMLToKafka {
    public static void main(String[] args) {
        // File path to your XML file
        String filePath = "path_to_your_xml_file.xml";

        try {
            // XML Parsing
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(new InputSource(new FileReader(filePath)));

            // Create JSON Object
            JSONObject jsonMessage = new JSONObject();

            // Extracting data dynamically from XML
            Element rootElement = document.getDocumentElement();
            NodeList nodeList = rootElement.getChildNodes();
            for (int i = 0; i < nodeList.getLength(); i++) {
                Node node = nodeList.item(i);
                if (node.getNodeType() == Node.ELEMENT_NODE) {
                    String nodeName = node.getNodeName();
                    String nodeValue = node.getTextContent();
                    jsonMessage.put(nodeName, nodeValue);
                }
            }

            // Automatically extract and add fields as described in XML
            String jobStatus = document.getElementsByTagName("job_status").item(0).getTextContent();
            String jobId = document.getElementsByTagName("job_id").item(0).getTextContent();
            String jarId = document.getElementsByTagName("jar_id").item(0).getTextContent();
            String exceptions = document.getElementsByTagName("exceptions").item(0).getTextContent();

            jsonMessage.put("job_status", jobStatus);
            jsonMessage.put("job_id", jobId);
            jsonMessage.put("jar_id", jarId);
            jsonMessage.put("exceptions", exceptions);
            // Add other fields automatically extracted here...

            // Convert JSON Object to String
            String jsonString = jsonMessage.toString();

            // Kafka Producer Configuration
            Properties props = new Properties();
            props.put("bootstrap.servers", "localhost:9092");
            props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
            props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");

            // Kafka Producer
            Producer<String, String> producer = new KafkaProducer<>(props);

            // Kafka Message
            ProducerRecord<String, String> record = new ProducerRecord<>("3459-COLLECTION-AUDIT-QUEUE", jsonString);

            // Send message to Kafka
            producer.send(record, new Callback() {
                public void onCompletion(RecordMetadata metadata, Exception e) {
                    if (e != null) {
                        e.printStackTrace();
                    } else {
                        System.out.println("Message sent successfully to Kafka.");
                    }
                }
            });

            producer.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
