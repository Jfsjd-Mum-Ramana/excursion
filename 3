import org.springframework.beans.factory.annotation.Value;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.verizon.ucs.model.DeviceInfo;
import com.verizon.ucs.service.NexusService;
import com.verizon.ucs.service.VmbEclipsePublisherService;

@Component
public class NexusScheduler {
    private static final Logger logger = LoggerFactory.getLogger(NexusScheduler.class);

    @Value("${scheduler.threadPoolSize}")
    private int threadPoolSize;

    private final NexusService nexusService;
    private final VmbEclipsePublisherService vmbEclipsePublisherService;

    public NexusScheduler(NexusService nexusService, VmbEclipsePublisherService vmbEclipsePublisherService) {
        this.nexusService = nexusService;
        this.vmbEclipsePublisherService = vmbEclipsePublisherService;
    }

    @Scheduled(fixedRate = 5000)  // Running every 5 seconds for testing purposes
    public void scheduleTask() {
        logger.info("Starting Scheduler (Hardcoded Test)");

        // Hardcode a test device info for Nexus 1450
        DeviceInfo deviceInfo = new DeviceInfo();
        deviceInfo.setDeviceIP("192.168.1.100"); // Simulate unreachable device IP
        deviceInfo.setModel("Nexus 1450"); // Nexus 1450 model

        // Simulate the device processing with a failure (unreachable device)
        try {
            nexusService.processDevice(deviceInfo);
        } catch (Exception e) {
            logger.error("Exception while processing device: {}", deviceInfo, e);
        }
    }
}