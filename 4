package com.verizon.ucs.service;

import org.springframework.stereotype.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.HttpServerErrorException;

import com.verizon.ucs.model.DataWrapperDTO;
import com.verizon.ucs.properties.DbProperties;
import com.verizon.ucs.util.RestTemplateCustomizer;

@Component
public class TtlScheduler {
    private static final Logger logger = LoggerFactory.getLogger(TtlScheduler.class);

    @Autowired
    private RestTemplateCustomizer restTemplateCustomizer;

    @Autowired
    private DbProperties databaseConfig;

    @Scheduled(cron = "${scheduler.ttl.cron}")
    public void scheduleCallStp() {
        String storedProcedureName = databaseConfig.getDeviceStpName(); // eclipse.delete_hpov_s2im_transactions
        logger.info("Starting transaction deletion using stored procedure: {}", storedProcedureName);

        try {
            DataWrapperDTO dto = new DataWrapperDTO();
            dto.setParameterList(new String[]{"dummy"}); // If required
            dto.setStpName(storedProcedureName);

            logger.info("Sending request to delete transactions...");
            String response = restTemplateCustomizer.callApi(dto);

            if (response != null && response.matches("\\d+")) { // If response is a number
                int deletedTransactions = Integer.parseInt(response);
                if (deletedTransactions > 0) {
                    logger.info("Transactions deleted successfully. Total deleted: {}", deletedTransactions);
                } else {
                    logger.info("No transactions were deleted.");
                }
            } else {
                logger.warn("Unexpected response received: {}", response);
            }

        } catch (HttpClientErrorException | HttpServerErrorException e) {
            logger.error("HTTP error while deleting transactions: Status Code = {}, Response Body = {}",
                    e.getStatusCode(), e.getResponseBodyAsString(), e);
        } catch (Exception e) {
            logger.error("Unexpected error while deleting transactions.", e);
        }
    }
}