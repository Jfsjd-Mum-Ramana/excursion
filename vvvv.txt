org.springframework.boot.context.properties



Here are 4 JUnit5 test cases for the test scenarios:


@Test
public void testMainWithValidInput() throws Exception {
  ParameterTool parameters = ParameterTool.fromArgs("input/data.txt", "topic1");
  Main main = new Main();
  main.main(parameters.getArray());

  // Verify that the output is correct
  String expectedOutput = "{\"id\":1,\"name\":\"John Doe\"}";
  String actualOutput = KafkaTestUtils.readDataFromTopic(parameters.get("bootstarpServer"), parameters.get("Topic"));
  assertThat(actualOutput).isEqualTo(expectedOutput);
}

@Test
public void testMainWithInvalidInput() throws Exception {
  ParameterTool parameters = ParameterTool.fromArgs("input/data.txt", "topic1", "invalid");
  Main main = new Main();
  main.main(parameters.getArray());

  // Verify that an exception is thrown
  assertThatThrownBy(() -> main.main(parameters.getArray()))
      .isInstanceOf(IllegalArgumentException.class)
      .hasMessage("Invalid argument: invalid");
}

@Test
public void testMainWithNoInput() throws Exception {
  ParameterTool parameters = ParameterTool.fromArgs();
  Main main = new Main();
  main.main(parameters.getArray());

  // Verify that an exception is thrown
  assertThatThrownBy(() -> main.main(parameters.getArray()))
      .isInstanceOf(IllegalArgumentException.class)
      .hasMessage("Missing required argument: input");
}

@Test
public void testMainWithNoTopic() throws Exception {
  ParameterTool parameters = ParameterTool.fromArgs("input/data.txt");
  Main main = new Main();
  main.main(parameters.getArray());

  // Verify that an exception is thrown
  assertThatThrownBy(() -> main.main(parameters.getArray()))
      .isInstanceOf(IllegalArgumentException.class)
      .hasMessage("Missing required argument: topic");
}