The error duplicate key value violates unique constraint unique_collection_metric indicates that the combination of collection_id and collection_date already exists in the ucsp_alarm_metrics table, violating the unique constraint unique_collection_metric.

To resolve this error, we need to ensure that each collection_id and collection_date combination is unique in the table. If you're trying to insert new data for collection_id = 1, you may need to either:

1. Update Existing Records for the same collection_id and collection_date if they already exist.


2. Insert Data with New collection_date values, ensuring no duplicates occur.



If you need to update existing records for collection_id = 1, you can use an UPDATE query instead of INSERT. Here's an example:

1. Update Query

-- Update existing records for collection_id = 1
UPDATE ucsp_alarm_metrics
SET number_of_msgs = 1500, size_of_msgs = 410000
WHERE collection_id = 1 AND collection_date = '2024-12-01 10:30:00';

UPDATE ucsp_alarm_metrics
SET number_of_msgs = 1600, size_of_msgs = 430000
WHERE collection_id = 1 AND collection_date = '2024-12-02 11:00:00';

-- Repeat for other collection_dates

2. Insert New Data (Ensuring Unique Dates)

If you are trying to insert new data, make sure that the collection_date is unique for each collection_id. Hereâ€™s an example with updated collection_date values to avoid duplicates:

-- Insert new records for collection_id = 1 with unique collection_date
INSERT INTO ucsp_alarm_metrics (collection_id, collection_date, number_of_msgs, size_of_msgs)
VALUES
(1, '2024-12-01 10:30:00', 1000, 204800),
(1, '2024-12-02 11:00:00', 1200, 250000),
(1, '2024-12-03 11:30:00', 950, 210000),
-- Add more unique dates for each collection_id...

3. Check for Existing Records

To prevent the error from happening, you can also check if a record exists for a given collection_id and collection_date before inserting. If the record already exists, update it instead of inserting new data.

For example, you can use a SELECT query to check if a record exists:

-- Check if the record already exists
SELECT * FROM ucsp_alarm_metrics
WHERE collection_id = 1 AND collection_date = '2024-12-01 10:30:00';

If the record exists, update it; otherwise, insert a new one.


---

Summary of Solutions:

1. Use UPDATE to modify existing data if it already exists for the given collection_id and collection_date.


2. Ensure collection_date is unique when inserting new records.


3. Check for existing records before performing an INSERT to avoid duplicate entries.



If you'd like, I can help you craft the SQL based on your exact requirements. Let me know what you'd like to do next!

