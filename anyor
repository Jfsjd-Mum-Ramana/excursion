To address your request, I’ll analyze the provided Helm configuration (`values.yaml`, `deployment.yaml`, and `helpers.tpl`) and the issue context (ensuring `S3FULLMESSAGE` works correctly for storing full JSON messages). The goal is to identify any unnecessary or problematic elements in the Helm configuration that can be removed or simplified, suggest additions to improve clarity or functionality, and ensure the `s3FullMessageFlag` functionality works as expected. I’ll also provide the corrected Helm configuration files.

### Analysis of Current Helm Configuration

1. **Issue Recap**:
   - The primary issue was that the `s3FullMessageFlag` in the `VmbPulsarMessageProcessor` class was not correctly picking up the `S3FULLMESSAGE: true` value from the Helm configuration, potentially due to the `toJson | quote` transformation in the deployment template.
   - The previous response suggested modifying the `S3FULLMESSAGE` environment variable in the deployment template to use `value: {{ $s3fullmessage | quote }}` to ensure it’s passed as a string `"true"`, which Spring Boot can parse as a boolean.

2. **Helm Files Overview**:
   - **`values.yaml`**: Defines the configuration for different environments (`npapp`, `plapp`, `prapp`) and clusters (`kub84`, `kub14`). It includes consumer-specific settings like `S3FULLMESSAGE`, `S3JSON`, and `TOPICURL`.
   - **`deployment.yaml` (generated from a template)**: Defines Kubernetes deployments for each enabled consumer (e.g., `hpov-trap-consumer`). It sets environment variables, resources, and mounts based on the `values.yaml`.
   - **`helpers.tpl`**: Contains template functions to compute values like `app.name`, `app.s3fullmessage`, `app.vmb.url`, etc., used in the deployment template.

3. **Potential Issues in Helm Configuration**:
   - **Redundant Template (`app.s3fullmessage`)**: The `app.s3fullmessage` helper in `helpers.tpl` is defined but not used in the deployment template. Instead, the deployment directly uses `$s3fullmessage` from the consumer-specific configuration. This helper is unnecessary and can be removed.
   - **Overuse of `toJson | quote`**: The deployment template uses `toJson | quote` for several environment variables (e.g., `S3_JSON`, `S3FULLMESSAGE`), which can cause issues with boolean or non-string values, as seen with `S3FULLMESSAGE`.
   - **Unused Environment Variables**: Some environment variables defined in the deployment (e.g., `NRAPPENV`, `NRLABELS`) may not be used in the provided code, suggesting potential cleanup if they’re not required.
   - **Complex Istio Exclusions**: The `app.istio.excludeOutboundIPRanges`, `excludeInboundPorts`, and `excludeOutboundPorts` are lengthy and may include unnecessary entries, depending on the application’s actual network requirements.
   - **Missing Validation**: The Helm chart doesn’t validate that required fields (e.g., `S3FULLMESSAGE`, `TOPICURL`) are set, which could lead to runtime errors if misconfigured.
   - **Inconsistent `S3FULLMESSAGE` Type**: In `values.yaml`, `S3FULLMESSAGE` is sometimes a boolean (`true`) and sometimes a string (`"true"`). This inconsistency could cause parsing issues.

4. **Goals for Changes**:
   - Remove unused or redundant elements in `helpers.tpl` and `deployment.yaml`.
   - Simplify environment variable handling to avoid issues with boolean parsing.
   - Ensure `S3FULLMESSAGE` is consistently handled as a boolean.
   - Add validation or defaults to prevent misconfiguration.
   - Improve clarity and maintainability of the Helm chart.

### Proposed Changes

#### 1. Changes to `helpers.tpl`

**Removals**:
- **Remove `app.s3fullmessage` Helper**: This helper is not used in the deployment template, as `$s3fullmessage` is directly accessed from the consumer configuration. Removing it reduces clutter.
  ```yaml
  {{- define "app.s3fullmessage" -}}
  {{- $datacenter := include "app.datacenter" . }}
  {{- $cluster := include "app.cluster" . }}
  {{- $env := include "app.env" . }}
  {{- printf "DEBUG: datacenter=%s, cluster=%s, env=%s\n" $datacenter $cluster $env -}}
  {{- printf "%s" (index .Values "kube" $datacenter $cluster $env "S3FULLMESSAGE") -}}
  {{- end -}}
  ```

**Additions**:
- **Add Validation Helper**: Introduce a helper to validate required consumer fields (e.g., `TOPICURL`, `SUBSCRIPTIONNAME`, `S3FULLMESSAGE`) to catch misconfigurations during Helm rendering.
  ```yaml
  {{- define "validate.consumer" -}}
  {{- $consumer := .consumer -}}
  {{- if not $consumer.TOPICURL -}}
    {{- fail "TOPICURL is required for consumer" -}}
  {{- end -}}
  {{- if not $consumer.SUBSCRIPTIONNAME -}}
    {{- fail "SUBSCRIPTIONNAME is required for consumer" -}}
  {{- end -}}
  {{- if not (hasKey $consumer "S3FULLMESSAGE") -}}
    {{- fail "S3FULLMESSAGE is required for consumer" -}}
  {{- end -}}
  {{- end -}}
  ```

**Modified `helpers.tpl`**:
```yaml
{{- /* vim: set filetype=mustache: */}}

{{- define "app.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{- define "app.env" -}}
{{ (split "-" .Release.Namespace)._3 }}
{{- end -}}

{{- define "app.datacenter" -}}
{{ (split "-" .Release.Namespace)._0 }}
{{- end -}}

{{- define "app.cluster" -}}
{{ (split "-" .Release.Name)._0 }}
{{- end -}}

{{- define "app.region" -}}
{{ printf "%s-%s" (split "-" .Release.Name)._0 (split "-" .Release.Name)._1 -}}
{{- end -}}

{{- define "app.vmb.url" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "VMB_SERVICE_URL") -}}
{{- end -}}

{{- define "app.image" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- $repository := printf "%s" (index .Values "kube" $datacenter $cluster $env "REPOSITORY") -}}
{{- $tag := printf "%s" (index .Values "kube" $datacenter $cluster $env "IMAGE_TAG") -}}
{{- printf "%s/%s:%s" $repository .Values.app.image.name $tag -}}
{{- end -}}

{{- define "app.log.appender" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $ersonsumer := .consumer -}}
{{- if not $consumer.TOPICURL -}}
  {{- fail "TOPICURL is required for consumer" -}}
{{- end -}}
{{- if not $consumer.SUBSCRIPTIONNAME -}}
  {{- fail "SUBSCRIPTIONNAME is required for consumer" -}}
{{- end -}}
{{- if not (hasKey $consumer "S3FULLMESSAGE") -}}
  {{- fail "S3FULLMESSAGE is required for consumer" -}}
{{- end -}}
{{- end -}}
```

**Explanation**:
- **Removed**: `app.s3fullmessage`, `app.vmb.topic`, `app.poll.perform`, `app.inventory` (unused in the deployment template).
- **Added**: `validate.consumer` to enforce required fields.
- **Kept**: Other helpers (`app.name`, `app.env`, etc.) as they are used in the deployment.

#### 2. Changes to `deployment.yaml` Template

**Removals**:
- **Remove Unused Environment Variables**: If `NRAPPENV`, `NRLABELS`, or `APP_NAME_SUFFIX` are not used in the code, they can be removed to simplify the deployment. Based on the provided code, `NRAPPENV` and `NRLABELS` are not referenced, but `APP_NAME_SUFFIX` is used in `application.yml`. For now, remove `NRAPPENV` and keep others pending confirmation of usage.
  ```yaml
  - name: NRAPPENV
    valueFrom:
      configMapKeyRef:
        name: {{ $top.Values.global.configmap.commons }}
        key: NRAPPENV
  ```

**Modifications**:
- **Simplify `S3FULLMESSAGE` and `S3_JSON` Handling**: Remove `toJson | quote` for `S3FULLMESSAGE` and `S3_JSON` to avoid issues with boolean parsing and ensure strings are passed correctly.
  ```yaml
  - name: S3FULLMESSAGE
    value: {{ $s3fullmessage | quote }}
  - name: S3_JSON
    value: {{ $s3json | quote }}
  ```
- **Add Validation**: Call the `validate.consumer` helper before rendering each consumer deployment.
  ```yaml
  {{- $_ := include "validate.consumer" (dict "consumer" $consumers_v) -}}
  ```

**Additions**:
- **Add Default Resources Comment**: Add a comment to clarify that resources fall back to defaults if not specified.
- **Add Liveness/Readiness Probes** (optional): Consider adding probes to ensure the consumer is healthy, especially since it’s a message processor.

**Modified `deployment.yaml` Template**:
```yaml
{{- $top := . -}}
{{- $datacenter := include "app.datacenter" $top -}}
{{- $cluster := include "app.cluster" $top -}}
{{- $env := include "app.env" $top -}}
{{- range $consumers_k, $consumers_v := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS") -}}
{{- $consumer := $consumers_k -}}
{{- $consumers_name := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "NAME") -}}
{{- $replicas := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "REPLICAS") -}}
{{- $enabled := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "ENABLED") -}}
{{- $topicurl := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "TOPICURL") -}}
{{- $s3json := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "S3JSON") -}}
{{- $s3fullmessage := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "S3FULLMESSAGE") -}}
{{- $resources := toYaml (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "RESOURCES") -}}
{{- $resources_default := toYaml (index $top.Values "resources_default" $env) -}}
{{- $subscription_name := toYaml (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "SUBSCRIPTIONNAME") -}}
{{- if $enabled -}}
{{- $_ := include "validate.consumer" (dict "consumer" $consumers_v) -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $consumers_name }}-consumer
spec:
  selector:
    matchLabels:
      app: {{ $consumers_name }}-consumer
  replicas: {{ $replicas }}
  revisionHistoryLimit: 0
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundIPRanges: {{ include "app.excludeOutboundIPRanges" $top }}
        traffic.sidecar.istio.io/excludeOutboundPorts: {{ include "app.excludeOutboundPorts" $top }}
        traffic.sidecar.istio.io/excludeInboundPorts: {{ include "app.excludeInboundPorts" $top }}
      labels:
        app: {{ $consumers_name }}-consumer
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: {{ $consumers_name }}-consumer
      containers:
        - name: {{ $consumers_name }}-consumer
          imagePullPolicy: Always
          image: {{ include "app.image" $top | quote }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: VMB_SERVICE_URL
              value: {{ include "app.vmb.url" $top }}
            - name: LOG_APPENDER
              value: {{ include "app.log.appender" $top }}
            - name: LOG_LEVEL
              value: {{ include "app.log.level" $top }}
            - name: LOG_TRUNCATE
              value: {{ include "app.log.truncate" $top | quote }}
            - name: S3API_SERVICE_URL
              value: {{ include "app.s3api.url" $top }}
            - name: S3OVERRIDEAUTH
              value: {{ include "app.s3OverrideAuth" $top }}
            - name: S3BUCKETKEY
              value: {{ include "app.s3bucketkey" $top }}
            - name: APP_NAME
              value: {{ include "app.name" $top | quote }}
            - name: TOPIC_NAME
              value: {{ $consumers_name }}
            - name: TOPIC_URL
              value: {{ $topicurl }}
            - name: S3_JSON
              value: {{ $s3json | quote }}
            - name: S3FULLMESSAGE
              value: {{ $s3fullmessage | quote }}
            - name: SUBSCRIPTION_NAME
              value: {{ $subscription_name }}
            - name: REGION
              value: {{ include "app.region" $top | quote }}
            - name: VMB_TLS_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.vmb }}
                  key: VMB_TLS_CERT_FILE
            - name: VMB_TLS_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.vmb }}
                  key: VMB_TLS_KEY_FILE
            - name: VMB_TRUST_CERTS_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.vmb }}
                  key: VMB_TRUST_CERTS_FILE
            - name: APPENV
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.commons }}
                  key: APPENV
            - name: APP_NAME_SUFFIX
              value: {{ $top.Values.app.namesuffix | quote }}
            - name: NRLICENSEKEY
              valueFrom:
                secretKeyRef:
                  name: {{ $top.Values.global.secret.newrelic }}
                  key: NRLICENSEKEY
            - name: NRLABELS
              valueFrom:
                secretKeyRef:
                  name: {{ $top.Values.global.secret.newrelic }}
                  key: NRLABELS
          resources: # Fallback to resources_default if not specified
{{ if (hasKey (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer) "RESOURCES") }}
{{ $resources | indent 12 }}
{{ else }}
{{ $resources_default | indent 12 }}
{{ end }}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: vmb-certs
            mountPath: "/prod/eclapp/vmb/ssl"
      imagePullSecrets:
       - name: oneartifactory-secret
      volumes:
        - name: tmp
          emptyDir: {}
        - name: vmb-certs
          secret:
            secretName: {{ $top.Values.global.secret.vmb }}
{{ end }}
{{ end }}
```

**Explanation**:
- **Removed**: `NRAPPENV` (not used in code; confirm if needed for New Relic).
- **Modified**: `S3FULLMESSAGE` and `S3_JSON` to use `| quote` instead of `| toJson | quote` for proper string handling.
- **Added**: Validation via `validate.consumer` and a comment for resource defaults.
- **Kept**: Other environment variables, as they are used in `application.yml` or code.

#### 3. Changes to `values.yaml`

**Modifications**:
- **Standardize `S3FULLMESSAGE` Type**: Ensure `S3FULLMESSAGE` is consistently a boolean (`true` or `false`) across all environments to avoid parsing issues. Update string values like `"true"` to `true`.
- **Simplify Istio Exclusions** (optional): The `excludeOutboundIPRanges` list is extensive. If some IPs are not needed, they can be removed after network analysis. For now, keep them unless you confirm which are unnecessary.

**Modified `values.yaml` (relevant section for `kube.bbtpnj33vzbcucs.kub84.npapp`)**:
```yaml
nameOverride: ""

global:
  configmap:
    vmb: vmb-config
    commons: common-config
    services: services-config
  secret:
    vmb: vmb-certs-secret
    newrelic: newrelic-secret

app:
  name: ms-vmb-consumer
  namesuffix: generic
  replicas: 1
  pod:
    labels:
      vcmp-log-target: alm
      alm-log-topic: seca_prd_app_logs_enmv
  istio:
    excludeOutboundIPRanges: 63.21.0.0/16,162.247.0.0/16,148.131.0.0/16,140.108.0.0/16,151.205.42.98/32,65.230.0.0/32,166.39.0.0/32,144.8.0.0/16,10.118.0.0/16,165.122.0.0/16,159.98.0.0/16,138.83.0.0/16,10.134.0.0/16,10.136.0.0/16,165.122.0.0/32,100.5.90.45/16,100.5.0.0/16,63.91.0.0/16,192.168.0.0/32,169.254.0.0/16,63.29.0.0/16,63.25.0.0/16,63.57.32.121/32,198.223.101.103/32,137.188.135.0/24,162.115.91.0/24,166.34.0.0/16,10.11.0.0/16,153.114.0.0/16
    excludeInboundPorts: 9997,6651,9998
    excludeOutboundPorts: 9997,6651,9998
  image:
    name: ms-vmb-consumer

resources_default:
  npapp:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 1Gi
  plapp:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 1Gi
  prapp:
    limits:
      cpu: 3
      memory: 4Gi
    requests:
      cpu: 250m
      memory: 2Gi

kube:
  bbtpnj33vzbcucs:
    kub84:
      npapp:
        REPOSITORY: enmv-docker-np.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-nonprod.verizon.com:6651
        IMAGE_TAG: S3Fullmessage
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.bbtpnj33vzbcucs-y-vz-npapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap
            S3JSON: {"mode":"I","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      plapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-ple.verizon.com:6651
        IMAGE_TAG: develop-2024-10-01T18-19-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.bbtpnj33vzbcucs-y-vz-plapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"OFF","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      prapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-prod.verizon.com:6651
        IMAGE_TAG: master-2025-02-03T22-49-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "false"
        S3OVERRIDEAUTH: ucs-tunnel-pr.enmv.vcp.vzwnet.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.bbtpnj33vzbcucs-y-vz-prapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"I","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
  twbgohaavzbcucs:
    kub14:
      npapp:
        REPOSITORY: enmv-docker-np.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-west-2-nonprod.verizon.com:6651
        IMAGE_TAG: feature-vs-0923
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "false"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.twbgohaavzbcucs-y-vz-npapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: false
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap
            S3JSON: {"mode":"OFF","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      plapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-ple.verizon.com:6651
        IMAGE_TAG: develop-2024-10-01T18-19-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.twbgohaavzbcucs-y-vz-plapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: false
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"OFF","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      prapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-west-2-prod.verizon.com:6651
        IMAGE_TAG: master-2025-02-03T22-49-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-pr.enmv.vcp.vzwnet.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.twbgohaavzbcucs-y-vz-prapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"I","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
```

**Explanation**:
- **Modified**: Changed `S3FULLMESSAGE: "true"` to `S3FULLMESSAGE: true` for consistency across all environments.
- **Kept**: Istio exclusions and other settings, as they are likely required unless network analysis confirms otherwise.

### Final Helm Configuration

Below are the complete, corrected Helm configuration files based on the changes above.

#### `templates/helpers.tpl`
```yaml
{{- /* vim: set filetype=mustache: */}}

{{- define "app.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{- define "app.env" -}}
{{ (split "-" .Release.Namespace)._3 }}
{{- end -}}

{{- define "app.datacenter" -}}
{{ (split "-" .Release.Namespace)._0 }}
{{- end -}}

{{- define "app.cluster" -}}
{{ (split "-" .Release.Name)._0 }}
{{- end -}}

{{- define "app.region" -}}
{{ printf "%s-%s" (split "-" .Release.Name)._0 (split "-" .Release.Name)._1 -}}
{{- end -}}

{{- define "app.vmb.url" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "VMB_SERVICE_URL") -}}
{{- end -}}

{{- define "app.image" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- $repository := printf "%s" (index .Values "kube" $datacenter $cluster $env "REPOSITORY") -}}
{{- $tag := printf "%s" (index .Values "kube" $datacenter $cluster $env "IMAGE_TAG") -}}
{{- printf "%s/%s:%s" $repository .Values.app.image.name $tag -}}
{{- end -}}

{{- define "app.log.appender" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "LOG_APPENDER") -}}
{{- end -}}

{{- define "app.log.level" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "LOG_LEVEL") -}}
{{- end -}}

{{- define "app.log.truncate" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "LOG_TRUNCATE") -}}
{{- end -}}

{{- define "app.s3api.url" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "S3API_SERVICE_URL") -}}
{{- end -}}

{{- define "app.s3OverrideAuth" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "S3OVERRIDEAUTH") -}}
{{- end -}}

{{- define "app.s3bucketkey" -}}
{{- $datacenter := include "app.datacenter" . }}
{{- $cluster := include "app.cluster" . }}
{{- $env := include "app.env" . }}
{{- printf "%s" (index .Values "kube" $datacenter $cluster $env "S3BUCKETKEY") -}}
{{- end -}}

{{- define "app.excludeOutboundIPRanges" -}}
{{- printf "%s" .Values.app.istio.excludeOutboundIPRanges -}}
{{- end -}}

{{- define "app.excludeInboundPorts" -}}
{{- printf "%s" .Values.app.istio.excludeInboundPorts -}}
{{- end -}}

{{- define "app.excludeOutboundPorts" -}}
{{- printf "%s" .Values.app.istio.excludeOutboundPorts -}}
{{- end -}}

{{- define "validate.consumer" -}}
{{- $consumer := .consumer -}}
{{- if not $consumer.TOPICURL -}}
  {{- fail "TOPICURL is required for consumer" -}}
{{- end -}}
{{- if not $consumer.SUBSCRIPTIONNAME -}}
  {{- fail "SUBSCRIPTIONNAME is required for consumer" -}}
{{- end -}}
{{- if not (hasKey $consumer "S3FULLMESSAGE") -}}
  {{- fail "S3FULLMESSAGE is required for consumer" -}}
{{- end -}}
{{- end -}}
```

#### `templates/deployment.yaml`
```yaml
{{- $top := . -}}
{{- $datacenter := include "app.datacenter" $top -}}
{{- $cluster := include "app.cluster" $top -}}
{{- $env := include "app.env" $top -}}
{{- range $consumers_k, $consumers_v := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS") -}}
{{- $consumer := $consumers_k -}}
{{- $consumers_name := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "NAME") -}}
{{- $replicas := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "REPLICAS") -}}
{{- $enabled := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "ENABLED") -}}
{{- $topicurl := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "TOPICURL") -}}
{{- $s3json := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "S3JSON") -}}
{{- $s3fullmessage := (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "S3FULLMESSAGE") -}}
{{- $resources := toYaml (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "RESOURCES") -}}
{{- $resources_default := toYaml (index $top.Values "resources_default" $env) -}}
{{- $subscription_name := toYaml (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer "SUBSCRIPTIONNAME") -}}
{{- if $enabled -}}
{{- $_ := include "validate.consumer" (dict "consumer" $consumers_v) -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $consumers_name }}-consumer
spec:
  selector:
    matchLabels:
      app: {{ $consumers_name }}-consumer
  replicas: {{ $replicas }}
  revisionHistoryLimit: 0
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundIPRanges: {{ include "app.excludeOutboundIPRanges" $top }}
        traffic.sidecar.istio.io/excludeOutboundPorts: {{ include "app.excludeOutboundPorts" $top }}
        traffic.sidecar.istio.io/excludeInboundPorts: {{ include "app.excludeInboundPorts" $top }}
      labels:
        app: {{ $consumers_name }}-consumer
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: {{ $consumers_name }}-consumer
      containers:
        - name: {{ $consumers_name }}-consumer
          imagePullPolicy: Always
          image: {{ include "app.image" $top | quote }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: VMB_SERVICE_URL
              value: {{ include "app.vmb.url" $top }}
            - name: LOG_APPENDER
              value: {{ include "app.log.appender" $top }}
            - name: LOG_LEVEL
              value: {{ include "app.log.level" $top }}
            - name: LOG_TRUNCATE
              value: {{ include "app.log.truncate" $top | quote }}
            - name: S3API_SERVICE_URL
              value: {{ include "app.s3api.url" $top }}
            - name: S3OVERRIDEAUTH
              value: {{ include "app.s3OverrideAuth" $top }}
            - name: S3BUCKETKEY
              value: {{ include "app.s3bucketkey" $top }}
            - name: APP_NAME
              value: {{ include "app.name" $top | quote }}
            - name: TOPIC_NAME
              value: {{ $consumers_name }}
            - name: TOPIC_URL
              value: {{ $topicurl }}
            - name: S3_JSON
              value: {{ $s3json | quote }}
            - name: S3FULLMESSAGE
              value: {{ $s3fullmessage | quote }}
            - name: SUBSCRIPTION_NAME
              value: {{ $subscription_name }}
            - name: REGION
              value: {{ include "app.region" $top | quote }}
            - name: VMB_TLS_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.vmb }}
                  key: VMB_TLS_CERT_FILE
            - name: VMB_TLS_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.vmb }}
                  key: VMB_TLS_KEY_FILE
            - name: VMB_TRUST_CERTS_FILE
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.vmb }}
                  key: VMB_TRUST_CERTS_FILE
            - name: APPENV
              valueFrom:
                configMapKeyRef:
                  name: {{ $top.Values.global.configmap.commons }}
                  key: APPENV
            - name: APP_NAME_SUFFIX
              value: {{ $top.Values.app.namesuffix | quote }}
            - name: NRLICENSEKEY
              valueFrom:
                secretKeyRef:
                  name: {{ $top.Values.global.secret.newrelic }}
                  key: NRLICENSEKEY
            - name: NRLABELS
              valueFrom:
                secretKeyRef:
                  name: {{ $top.Values.global.secret.newrelic }}
                  key: NRLABELS
          resources: # Fallback to resources_default if not specified
{{ if (hasKey (index $top.Values "kube" $datacenter $cluster $env "CONSUMERS" $consumer) "RESOURCES") }}
{{ $resources | indent 12 }}
{{ else }}
{{ $resources_default | indent 12 }}
{{ end }}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: vmb-certs
            mountPath: "/prod/eclapp/vmb/ssl"
      imagePullSecrets:
       - name: oneartifactory-secret
      volumes:
        - name: tmp
          emptyDir: {}
        - name: vmb-certs
          secret:
            secretName: {{ $top.Values.global.secret.vmb }}
{{ end }}
{{ end }}
```

#### `values.yaml`
```yaml
nameOverride: ""

global:
  configmap:
    vmb: vmb-config
    commons: common-config
    services: services-config
  secret:
    vmb: vmb-certs-secret
    newrelic: newrelic-secret

app:
  name: ms-vmb-consumer
  namesuffix: generic
  replicas: 1
  pod:
    labels:
      vcmp-log-target: alm
      alm-log-topic: seca_prd_app_logs_enmv
  istio:
    excludeOutboundIPRanges: 63.21.0.0/16,162.247.0.0/16,148.131.0.0/16,140.108.0.0/16,151.205.42.98/32,65.230.0.0/32,166.39.0.0/32,144.8.0.0/16,10.118.0.0/16,165.122.0.0/16,159.98.0.0/16,138.83.0.0/16,10.134.0.0/16,10.136.0.0/16,165.122.0.0/32,100.5.90.45/16,100.5.0.0/16,63.91.0.0/16,192.168.0.0/32,169.254.0.0/16,63.29.0.0/16,63.25.0.0/16,63.57.32.121/32,198.223.101.103/32,137.188.135.0/24,162.115.91.0/24,166.34.0.0/16,10.11.0.0/16,153.114.0.0/16
    excludeInboundPorts: 9997,6651,9998
    excludeOutboundPorts: 9997,6651,9998
  image:
    name: ms-vmb-consumer

resources_default:
  npapp:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 1Gi
  plapp:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 1Gi
  prapp:
    limits:
      cpu: 3
      memory: 4Gi
    requests:
      cpu: 250m
      memory: 2Gi

kube:
  bbtpnj33vzbcucs:
    kub84:
      npapp:
        REPOSITORY: enmv-docker-np.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-nonprod.verizon.com:6651
        IMAGE_TAG: S3Fullmessage
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.bbtpnj33vzbcucs-y-vz-npapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap
            S3JSON: {"mode":"I","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      plapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-ple.verizon.com:6651
        IMAGE_TAG: develop-2024-10-01T18-19-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.bbtpnj33vzbcucs-y-vz-plapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"OFF","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      prapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-prod.verizon.com:6651
        IMAGE_TAG: master-2025-02-03T22-49-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "false"
        S3OVERRIDEAUTH: ucs-tunnel-pr.enmv.vcp.vzwnet.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.bbtpnj33vzbcucs-y-vz-prapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"I","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
  twbgohaavzbcucs:
    kub14:
      npapp:
        REPOSITORY: enmv-docker-np.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-west-2-nonprod.verizon.com:6651
        IMAGE_TAG: feature-vs-0923
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "false"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.twbgohaavzbcucs-y-vz-npapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: false
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap
            S3JSON: {"mode":"OFF","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      plapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-east-1-ple.verizon.com:6651
        IMAGE_TAG: develop-2024-10-01T18-19-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-np.enmv.ebiz.verizon.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER/COLLECTOR
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.twbgohaavzbcucs-y-vz-plapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: false
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"OFF","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
      prapp:
        REPOSITORY: enmv-docker-prod.oneartifactoryci.verizon.com
        VMB_SERVICE_URL: pulsar+ssl://vmb-aws-us-west-2-prod.verizon.com:6651
        IMAGE_TAG: master-2025-02-03T22-49-17
        LOG_APPENDER: STDOUT_JSON_PATTERN
        LOG_LEVEL: INFO
        LOG_TRUNCATE: "true"
        S3OVERRIDEAUTH: ucs-tunnel-pr.enmv.vcp.vzwnet.com
        S3BUCKETKEY: HPOV-TRAP-CONSUMER
        S3API_SERVICE_URL: ms-sthreeapi-idnipv4-service.twbgohaavzbcucs-y-vz-prapp-enmv.svc.cluster.local:9998
        CONSUMERS:
          HPOV-TRAP:
            NAME: hpov-trap
            ENABLED: true
            SUBSCRIPTIONNAME: ENMV_HPOV_TRAP_SUBSCRIPTION
            REPLICAS: 1
            TOPICURL: persistent://enmv/hpov-alarm/hpov-snmp-trap-filtered
            S3JSON: {"mode":"I","s3Logging":"true","persistenceTimestampFlag":"true","retentionType":"","retentionValue":"5","ucgId":"ucgIdEnabled"}
            S3FULLMESSAGE: true
```

### Testing Instructions

1. **Deploy the Updated Helm Chart**:
   ```bash
   helm upgrade --install <release-name> <chart-path> -n <namespace>
   ```

2. **Verify Environment Variables**:
   - Check the pod’s environment variables to ensure `S3FULLMESSAGE` is set to `"true"`:
     ```bash
     kubectl describe pod <pod-name> -n <namespace>
     ```

3. **Check Logs**:
   - Look for logs in the `VmbPulsarMessageProcessor` indicating that `s3FullMessageFlag` is `true` and the full JSON message is being printed:
     ```java
     logger.info("Full JSON Message:\n{}", formattedJson);
     logger.info("s3FullMessageFlag is true. Storing the full JSON to S3.");
     ```
   - Add temporary debug logging if needed:
     ```java
     logger.info("s3FullMessageFlag is set to: {}", s3FullMessageFlag);
     ```

4. **Validate S3 Storage**:
   - Confirm that full JSON messages are stored in the S3 bucket (`HPOV-TRAP-CONSUMER/COLLECTOR/HPOVTRAP`).

### Summary of Adds and Removes

**`helpers.tpl`**:
- **Removed**: `app.s3fullmessage`, `app.vmb.topic`, `app.poll.perform`, `app.inventory` (unused).
- **Added**: `validate.consumer` helper to enforce required fields.
- **Impact**: Reduces clutter and adds validation to catch misconfigurations.

**`deployment.yaml`**:
- **Removed**: `NRAPPENV` environment variable (not used; confirm if needed).
- **Modified**: `S3FULLMESSAGE` and `S3_JSON` to use `| quote` for proper string handling.
- **Added**: Validation via `validate.consumer` and a resource comment.
- **Impact**: Simplifies environment variable handling and ensures robust configuration.

**`values.yaml`**:
- **Modified**: Standardized `S3FULLMESSAGE` as a boolean (`true` instead of `"true"`).
- **Impact**: Ensures consistent parsing by Spring Boot.

These changes ensure that the `S3FULLMESSAGE` flag works correctly, the Helm chart is cleaner and more robust, and potential misconfigurations are caught early. If you need further clarification or additional changes (e.g., simplifying Istio exclusions), please provide more details about the network requirements or unused variables.