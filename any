public void testUntar_WithNonTarFile() throws IOException {
    // Create a non-tar file in the temporary directory
    Path nonTarFilePath = tempDir.resolve("file.txt");
    Files.createFile(nonTarFilePath);

    // Create a destination directory
    Path destDir = tempDir.resolve("destDir");
    Files.createDirectory(destDir);

    // Call the method and assert that it throws an exception
    assertThrows(IOException.class, () -> {
        try {
            ZipUtil.untar(nonTarFilePath.toString(), destDir.toString());
        } catch (TarException e) {
            throw new IOException("Failed to untar the file.", e);
        }
    });
}

public void testUntarAndUngzip_WithNonTarGzFile() throws IOException {
    // Create a non-tar.gz file in the temporary directory
    Path nonTarGzFilePath = tempDir.resolve("file.txt");
    Files.createFile(nonTarGzFilePath);

    // Create a destination directory
    Path destDir = tempDir.resolve("destDir");
    Files.createDirectory(destDir);

    // Call the method and assert that it throws an exception
    assertThrows(IOException.class, () -> {
        try {
            ZipUtil.untarAndUngzip(nonTarGzFilePath.toString(), destDir.toString());
        } catch (TarException | GzipException e) {
            throw new IOException("Failed to untar and ungzip the file.", e);
        }
    });
}
