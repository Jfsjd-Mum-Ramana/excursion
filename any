import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.S3ObjectInputStream;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.amazonaws.services.s3.model.S3Exception;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.auth.AWSStaticCredentialsProvider;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.util.HashMap;
import java.util.Map;

public class S3FileManagerTest {

    @Mock
    private AmazonS3 amazonS3;

    private final String accessKey = "mockAccessKey";
    private final String secretKey = "mockSecretKey";
    private final String bucketName = "testBucket";

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetFileContent() {
        // Given
        BasicAWSCredentials credentials = new BasicAWSCredentials(accessKey, secretKey);
        S3FileManager s3FileManager = new S3FileManager(credentials, amazonS3);

        String expectedContent = "Test content line 1\nTest content line 2";
        GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName, "testFile.txt");
        S3Object s3Object = new S3Object();
        s3Object.setObjectContent(new S3ObjectInputStream(new ByteArrayInputStream(expectedContent.getBytes()), null));
        when(amazonS3.getObject(getObjectRequest)).thenReturn(s3Object);

        // When
        String content = s3FileManager.getFileContent("testFile.txt");

        // Then
        assertEquals(expectedContent, content);
    }

    @Test
    public void testPushToS3() {
        // Given
        BasicAWSCredentials credentials = new BasicAWSCredentials(accessKey, secretKey);
        S3FileManager s3FileManager = new S3FileManager(credentials, amazonS3);

        String objectPath = "/path/to/testFile.txt";
        PutObjectRequest putObjectRequest = new PutObjectRequest(bucketName, "testFile.txt", new File(objectPath));
        doNothing().when(amazonS3).putObject(putObjectRequest);

        // When
        s3FileManager.pushToS3(objectPath, "testFile.txt");

        // Then
        verify(amazonS3, times(1)).putObject(putObjectRequest);
    }
}
