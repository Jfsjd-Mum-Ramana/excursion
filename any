Here are some positive and negative test scenarios for the provided `ZipUtil` class:

Positive Scenarios:
1. **Valid Zip File**: Provide a valid zip file path to the `isZipFile` method and verify that it returns true.
2. **Valid Tar File**: Provide a valid tar file path to the `isZipFile` method and verify that it returns true.
3. **Valid Gzipped Tar File**: Provide a valid gzipped tar file path to the `isZipFile` method and verify that it returns true.
4. **Extract Tar File**: Provide a valid tar file path and destination directory to the `extract` method and verify that it successfully extracts the files to the destination directory.
5. **Extract Gzipped Tar File**: Provide a valid gzipped tar file path and destination directory to the `extract` method and verify that it successfully extracts the files to the destination directory.

Negative Scenarios:
1. **Invalid File Extension**: Provide a file path with an invalid extension (e.g., `.xyz`) to the `isZipFile` method and verify that it returns false.
2. **Non-existent File**: Provide a non-existent file path to the `extract` method and verify that it handles the error gracefully.
3. **Unsupported File Type**: Provide a file path with an unsupported file type to the `extract` method and verify that it throws an IOException with the appropriate message.
4. **Invalid Destination Directory**: Provide an invalid destination directory path to the `extract` method and verify that it handles the error gracefully.

These scenarios cover both positive and negative cases to ensure the robustness of the `ZipUtil` class.