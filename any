@Test
void testConsume() throws IOException {
    SpaceCollector sp = getSpaceCollector();

    File file = new File(sp.getInputFilePath());
    file.createNewFile();

    String type = kafkaConsumer.getExtension(sp.getInputFilePath());

    // Check if kafkaConsumer or type is null before proceeding
    assertNotNull(kafkaConsumer);
    assertNotNull(type);

    try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true))) {
        StringBuilder sb = new StringBuilder()
                .append("test1 test2 test3")
                .append(System.lineSeparator())
                .append("test4|test5|test6");

        writer.append(sb);
    } catch (IOException e) {
        // Handle or log the IOException
        e.printStackTrace();
    }

    when(FlinkApi.triggerJob(sp, type)).thenReturn("success");

    // Ensure kafkaConsumer is not null before invoking consume method
    assertNotNull(kafkaConsumer);

    assertAll(() -> kafkaConsumer.consume(new ObjectMapper().writeValueAsString(sp)));

    kafkaConsumer.deleteFile(sp.getInputFilePath());
}